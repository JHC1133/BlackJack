// <auto-generated />
using System;
using DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(GameDbContext))]
    [Migration("20231031085420_FourthMigration")]
    partial class FourthMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EL.DealerStatistics", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Blackjacks")
                        .HasColumnType("int");

                    b.Property<int>("Busts")
                        .HasColumnType("int");

                    b.Property<int>("Losses")
                        .HasColumnType("int");

                    b.Property<int>("Ties")
                        .HasColumnType("int");

                    b.Property<int>("Wins")
                        .HasColumnType("int");

                    b.HasKey("Name");

                    b.ToTable("DealerStatistics");
                });

            modelBuilder.Entity("EL.Game", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("DatePlayed")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("EL.GameStatistics", b =>
                {
                    b.Property<int>("GameID")
                        .HasColumnType("int");

                    b.Property<string>("PlayerName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DealerName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ID")
                        .HasColumnType("int");

                    b.HasKey("GameID", "PlayerName", "DealerName");

                    b.HasIndex("DealerName");

                    b.HasIndex("PlayerName");

                    b.ToTable("GameStatistics");
                });

            modelBuilder.Entity("EL.PlayerStatistics", b =>
                {
                    b.Property<string>("PlayerName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Blackjacks")
                        .HasColumnType("int");

                    b.Property<int>("Busts")
                        .HasColumnType("int");

                    b.Property<int>("Losses")
                        .HasColumnType("int");

                    b.Property<int>("Ties")
                        .HasColumnType("int");

                    b.Property<int>("Wins")
                        .HasColumnType("int");

                    b.HasKey("PlayerName");

                    b.ToTable("PlayerStatistics");
                });

            modelBuilder.Entity("EL.GameStatistics", b =>
                {
                    b.HasOne("EL.DealerStatistics", "DealerStatistics")
                        .WithMany("GameStatistics")
                        .HasForeignKey("DealerName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EL.Game", "Game")
                        .WithMany("GameStatistics")
                        .HasForeignKey("GameID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EL.PlayerStatistics", "PlayerStatistics")
                        .WithMany("GameStatistics")
                        .HasForeignKey("PlayerName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DealerStatistics");

                    b.Navigation("Game");

                    b.Navigation("PlayerStatistics");
                });

            modelBuilder.Entity("EL.DealerStatistics", b =>
                {
                    b.Navigation("GameStatistics");
                });

            modelBuilder.Entity("EL.Game", b =>
                {
                    b.Navigation("GameStatistics");
                });

            modelBuilder.Entity("EL.PlayerStatistics", b =>
                {
                    b.Navigation("GameStatistics");
                });
#pragma warning restore 612, 618
        }
    }
}
